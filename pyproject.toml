# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "ome-types"
description = "Python dataclasses for the OME data model"
keywords = ["ome", "ome-model", "microscopy", "schema", "types"]
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
authors = [{ name = "Talley Lambert", email = "talley.lambert@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = [
  "pydantic >=1.9.0",
  "xsdata >=23.5",                              # 23.6 necessary for codegen, but not for runtime
  "importlib_metadata; python_version < '3.8'",
]

[project.urls]
Source = "https://github.com/tlambert03/ome-types"
Tracker = "https://github.com/tlambert03/ome-types/issues"
Documentation = "https://ome-types.readthedocs.io/en/latest/"

[project.entry-points."napari.manifest"]
ome-types = "ome_types:napari.yaml"

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
pint = ["Pint >=0.15"]
lxml = ["lxml >=4.8.0"]
dev = [
  "black",
  "ruff",
  "xsdata[cli]>=23.6",
  "mypy",
  "pre-commit",
  "types-lxml; python_version >= '3.8'",
]
docs = ["mkdocs-material", "mkdocstrings-python"]
test = [
  "lxml",
  "numpy",
  "pint",
  "pytest-codspeed",
  "pytest-cov",
  "pytest-mypy-plugins",
  "pytest",
  "xmlschema",
]
test-qt = ["qtpy", "pytest-qt"]

# https://hatch.pypa.io/latest/plugins/build-hook/custom/
[tool.hatch.build.targets.wheel.hooks.custom]
# requirements to run the autogen script in hatch_build.py
require-runtime-dependencies = true
dependencies = ["black", "ruff", "xsdata[cli]>=23.6"]


# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch]
version = { source = "vcs" }

[tool.hatch.build.targets.wheel]
only-include = ["src/ome_types", "src/xsdata_pydantic_basemodel"]
sources = ["src"]
artifacts = ["src/ome_types/_autogenerated"]

[tool.hatch.build.targets.sdist]
include = ["src", "CHANGELOG.md", "hatch_build.py"]
exclude = ["src/ome_types/_autogenerated"]


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
src = ["src", "tests"]
target-version = "py37"
select = [
  "E",    # style errors
  "F",    # flakes
  "D",    # pydocstyle
  "I",    # isort
  "UP",   # pyupgrade
  "S",    # bandit
  "C4",   # flake8-comprehensions
  "B",    # flake8-bugbear
  "A001", # flake8-builtins
  "TID",  # tidy
  "TCH",  # typechecking
  "RUF",  # ruff-specific rules
]
ignore = [
  "D100",   # Missing docstring in public module
  "D101",   # Missing docstring in public class
  "D104",   # Missing docstring in public package
  "D106",   # Missing docstring in public nested class
  "D107",   # Missing docstring in __init__
  "D203",   # 1 blank line required before class docstring
  "D205",   # 1 blank line required between summary line and description
  "D212",   # Multi-line docstring summary should start at the first line
  "D213",   # Multi-line docstring summary should start at the second line
  "D400",   # First line should end with a period
  "D404",   # First word of the docstring should not be This
  "D413",   # Missing blank line after last section
  "D416",   # Section name should end with a colon
  "C901",   # Function is too complex
  "RUF009", # Do not perform function calls in default arguments
  "S3",     # xml security
]
exclude = ['src/_ome_autogen.py', 'src/ome_types/_vendor']

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all" # Disallow all relative imports.

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S"]
"src/ome_autogen.py" = ["D10", "E501"]
".github/*.py" = ["D"]
"setup.py" = ["D"]
"docs/**/*.py" = ["D"]
"src/xsdata_pydantic_basemodel/**/*.py" = ["D"]

[tool.check-manifest]
ignore = [
  "coverage.yml",
  ".pre-commit-config.yaml",
  ".github_changelog_generator",
  ".readthedocs.yml",
  "mkdocs.yml",
  "docs/**/*",
  "tests/**/*",
  "typesafety/**/*",
]


[tool.black]
target-version = ['py38']

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = '--mypy-only-local-stub --color=yes'
filterwarnings = [
  "error",
  "ignore:Casting invalid AnnotationID:UserWarning",
  # FIXME: i think this might be an xsdata issue?
  "ignore::ResourceWarning",
  "ignore:pkg_resources is deprecated",  # paquo tests
  "ignore:::paquo",                      # paquo tests
  "ignore:the imp module is deprecated", # omero tests
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*/*.py"
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
# warn_unused_ignores = true
disallow_any_generics = false
no_implicit_reexport = true
ignore_missing_imports = true
disallow_untyped_defs = true
plugins = "pydantic.mypy"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false       # allow parsing Any

[[tool.mypy.overrides]]
module = ['ome_types._autogenerated.ome_2016_06.structured_annotations']
# Definition of "__iter__" in base class "BaseModel"
# is incompatible with definition in base class "Sequence"
disable_error_code = "misc"

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@overload",
  "except ImportError",
  "\\.\\.\\.",
  "raise NotImplementedError()",
]

[tool.coverage.run]
source = ["ome_types", "ome_autogen"]
omit = ["src/ome_types/_autogenerated/*", "/private/var/folders/*", "*/_vendor/*", "src/ome_types/widget.py"]

# Entry points -- REMOVE ONCE XSDATA-PYDANTIC-BASEMODEL IS SEPARATE
[project.entry-points."xsdata.plugins.class_types"]
xsdata_pydantic_basemodel = "xsdata_pydantic_basemodel.hooks.class_type"

[project.entry-points."xsdata.plugins.cli"]
xsdata_pydantic_basemodel = "xsdata_pydantic_basemodel.hooks.cli"
