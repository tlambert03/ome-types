[metadata]
name = ome_types
description = Python dataclasses for the OME data model
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/tlambert03/ome-types
author = Talley Lambert
author_email = talley.lambert@gmail.com
license = MIT
license_file = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10

[options]
packages = find:
install_requires =
    Pint>=0.15
    pydantic[email]>=1.0
    xmlschema>=1.4.1,<2
python_requires = >=3.7
include_package_data = True
package_dir =
    =src
zip_safe = False

[options.packages.find]
where = src

[options.entry_points]
napari.plugin =
    ome-types = ome_types._napari_plugin

[options.extras_require]
autogen =
    autoflake
    black
    isort>=5.0
    numpydoc
test =
    pytest
    pytest-benchmark
    tox

[options.package_data]
* = *.xsd
ome_types = py.typed

[flake8]
ignore = W503, C901, E501, E203
max-line-length = 88

[mypy]
follow_imports = silent
strict_optional = True
warn_redundant_casts = True
disallow_any_generics = True
check_untyped_defs = True
no_implicit_reexport = True
ignore_missing_imports = True
files = src
disallow_untyped_defs = True

[tool:pytest]
addopts = --benchmark-disable

[tox:tox]
envlist = py{37,38,39,310}-{linux,macos,windows},pre-commit
toxworkdir = /tmp/.tox

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
platform =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
platform =
    macos: darwin
    linux: linux
    windows: win32
passenv = CI GITHUB_ACTIONS CODECOV_TOKEN
extras = test
commands = pytest -v --basetemp={envtmpdir} {posargs}

[testenv:benchmark]
passenv = CI GITHUB_ACTIONS
extras = test
commands = pytest -v --benchmark-enable --basetemp={envtmpdir} {posargs}

[testenv:mypy]
deps = mypy
commands = mypy

[testenv:lint]
deps = flake8
commands = flake8

[testenv:pre-commit]
deps = pre-commit
commands = pre-commit run --all-files
