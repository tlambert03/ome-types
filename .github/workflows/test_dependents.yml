name: test dependents

on:
  push:
    branches:
      - "main"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-aicsimageio:
    name: test aicsimageio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: AllenCellModeling/aicsimageio
          submodules: true
      - uses: actions/checkout@v3
        with:
          path: ome-types
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install aicsimageio
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
          python -m pip install bioformats_jar

      - uses: actions/cache@v3
        id: cache
        with:
          path: aicsimageio/tests/resources
          key: ${{ hashFiles('scripts/TEST_RESOURCES_HASH.txt') }}

      - name: Download Test Resources
        if: steps.cache.outputs.cache-hit != 'true'
        run: python scripts/download_test_resources.py --debug

      - name: Install ome-types
        run: pip install .
        working-directory: ome-types

      - name: Run Tests
        run: |
          pytest --color=yes -k "not test_known_errors_without_cleaning and not bad" \
            aicsimageio/tests/readers/test_ome_tiff_reader.py \
            aicsimageio/tests/writers/test_ome_tiff_writer.py \
            aicsimageio/tests/readers/extra_readers/test_bioformats_reader.py \
            aicsimageio/tests/readers/extra_readers/test_ome_zarr_reader.py

  test-paquo:
    name: test paquo
    runs-on: ubuntu-latest
    env:
      QUPATH_VERSION: 0.4.3
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install .[test,dev]
          python -m pip install paquo

      - name: Restore qupath cache
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0
        with:
          path: ./qupath/download
          key: ${{ runner.os }}-qupath-v${{ env.CACHE_NUMBER }}

      - name: Install qupath and set PAQUO_QUPATH_DIR
        shell: bash
        run: |
          python -c "import os; os.makedirs('qupath/download', exist_ok=True)"
          python -c "import os; os.makedirs('qupath/apps', exist_ok=True)"
          python -m paquo get_qupath --install-path ./qupath/apps --download-path ./qupath/download ${{ env.QUPATH_VERSION }} \
              | grep -v "^#" | sed "s/^/PAQUO_QUPATH_DIR=/" >> $GITHUB_ENV

      - name: Test with pytest
        run: pytest tests/test_paquo.py
