name: tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_manifest:
    name: check-manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: check-manifest
        run: |
          pip install check-manifest
          check-manifest

  test:
    name: test ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install .[test,dev]
      - name: Test
        run: pytest --cov --cov-report=xml

      - uses: codecov/codecov-action@v2

  test-aicsimageio:
    name: test aicsimageio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: AllenCellModeling/aicsimageio
          submodules: true
      - uses: actions/checkout@v3
        with:
          path: ome-types
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install aicsimageio
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
          python -m pip install bioformats_jar

      - uses: actions/cache@v3
        id: cache
        with:
          path: aicsimageio/tests/resources
          key: ${{ hashFiles('scripts/TEST_RESOURCES_HASH.txt') }}

      - name: Download Test Resources
        if: steps.cache.outputs.cache-hit != 'true'
        run: python scripts/download_test_resources.py --debug

      - name: Install ome-types
        run: pip install .
        working-directory: ome-types

      - name: Run Tests
        run: |
          pytest aicsimageio/tests/readers/test_ome_tiff_reader.py \
            aicsimageio/tests/readers/extra_readers/test_bioformats_reader.py \
            aicsimageio/tests/readers/extra_readers/test_ome_zarr_reader.py \
            -v -k "not REMOTE"
