from typing import Optional

from pydantic import Field

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.detector_type import Detector_Type
from ome_types._autogenerated.ome_2016_06.manufacturer_spec import (
    ManufacturerSpec,
)
from ome_types._autogenerated.ome_2016_06.units_electric_potential import (
    UnitsElectricPotential,
)

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class Detector(ManufacturerSpec):
    """The type of detector used to capture the image.

    The Detector ID can be used as a reference within the Channel
    element in the Image element. The values stored in Detector
    represent the fixed values, variable values modified during the
    acquisition go in DetectorSettings Each attribute now has an
    indication of what type of detector it applies to. This is
    preparatory work for cleaning up and possibly splitting this object
    into sub-types.

    Attributes
    ----------
    annotation_refs : list[AnnotationRef]
        (The Detector AnnotationRefs).
    gain : None | float
        The Detector Gain for this detector, as a float. [units:none]
        {used:CCD,EMCCD,PMT}
    voltage : None | float
        The Voltage of the detector (e.g. PMT voltage) as a float. {used:PMT} Units
        are set by VoltageUnit.
    voltage_unit : UnitsElectricPotential
        The units of the Voltage - default:volts[V].
    offset : None | float
        The Detector Offset. [units:none] {used:CCD,EMCCD}
    zoom : None | float
        The fixed Zoom for a detector. [units:none] {used:PMT}
    amplification_gain : None | float
        Gain applied to the detector signal. This is the electronic gain (as
        apposed to the inherent gain) that is set for the detector. [units:none]
        {used:EMCCD#EMGain}
    id : str
        (The Detector ID).
    type : None | Detector_Type
        The Type of detector. E.g. CCD, PMT, EMCCD etc.
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    annotation_refs: list[AnnotationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "AnnotationRef",
            "type": "Element",
        },
    )
    gain: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "Gain",
            "type": "Attribute",
        },
    )
    voltage: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "Voltage",
            "type": "Attribute",
        },
    )
    voltage_unit: UnitsElectricPotential = Field(
        default=UnitsElectricPotential.VOLT,
        json_schema_extra={
            "name": "VoltageUnit",
            "type": "Attribute",
        },
    )
    offset: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "Offset",
            "type": "Attribute",
        },
    )
    zoom: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "Zoom",
            "type": "Attribute",
        },
    )
    amplification_gain: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "AmplificationGain",
            "type": "Attribute",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Detector:\S+)|(Detector:\S+)",
        json_schema_extra={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Detector:\S+)|(Detector:\S+)",
        },
    )
    type: Optional[Detector_Type] = Field(
        default=None,
        json_schema_extra={
            "name": "Type",
            "type": "Attribute",
        },
    )


Type = Detector_Type
