from typing import Optional

from pydantic import Field

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.manufacturer_spec import (
    ManufacturerSpec,
)
from ome_types._autogenerated.ome_2016_06.units_power import UnitsPower

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class LightSource(ManufacturerSpec):
    """The lightsource for the instrument.

    An instrument may have several light sources. The type of
    lightsource is specified by one of the child-elements which are
    'Laser', 'Filament', 'Arc' or 'LightEmittingDiode'. Each of the
    light source types has its own Type attribute to further
    differentiate the light source (eg, Nd-YAG for Laser or Hg for Arc).

    Attributes
    ----------
    annotation_refs : list[AnnotationRef]
        (The LightSource AnnotationRefs).
    id : str
        A LightSource ID must be specified for each light source, and the
        individual light sources can be referred to by their LightSource IDs (eg
        from Channel).
    power : None | float
        The light-source power. Units are set by PowerUnit.
    power_unit : UnitsPower
        The units of the Power - default:milliwatts[mW].
    """

    annotation_refs: list[AnnotationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "AnnotationRef",
            "type": "Element",
            "namespace": "http://www.openmicroscopy.org/Schemas/OME/2016-06",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:LightSource:\S+)|(LightSource:\S+)",
        json_schema_extra={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:LightSource:\S+)|(LightSource:\S+)",
        },
    )
    power: Optional[float] = Field(
        default=None,
        json_schema_extra={
            "name": "Power",
            "type": "Attribute",
        },
    )
    power_unit: UnitsPower = Field(
        default=UnitsPower.MILLIWATT,
        json_schema_extra={
            "name": "PowerUnit",
            "type": "Attribute",
        },
    )
