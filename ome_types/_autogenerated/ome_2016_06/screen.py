from typing import Optional

from pydantic import Field

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.reagent import Reagent
from ome_types._autogenerated.ome_2016_06.reference import Reference
from ome_types._mixins._base_type import OMEType

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class Screen(OMEType):
    """The Screen element is a grouping for Plates.

    The required attribute is the Screen's Name and ID - both must be unique within the document.
    The Screen element may contain an ExternalRef attribute that refers to an external database.
    A description of the screen may be specified in the Description element.
    Screens may contain overlapping sets of Plates i.e.      Screens and Plates have a many-to-many relationship.
    Plates contain one or more ScreenRef elements to specify what screens they belong to.

    Attributes
    ----------
    description : None | str
        A description for the screen.
    reagents : list[Reagent]
        (The Screen Reagents).
    plate_refs : list["Screen.PlateRef"]
        The PlateRef element is a reference to a Plate element. Screen elements may
        have one or more PlateRef elements to define the plates that are part of
        the screen. Plates may belong to more than one screen.
    annotation_refs : list[AnnotationRef]
        (The Screen AnnotationRefs).
    id : str
        (The Screen ID).
    name : None | str
        (The Screen Name).
    protocol_identifier : None | str
        A pointer to an externally defined protocol, usually in a screening
        database.
    protocol_description : None | str
        A description of the screen protocol; may contain very detailed information
        to reproduce some of that found in a screening database.
    reagent_set_description : None | str
        A description of the set of reagents; may contain very detailed information
        to reproduce some of that information found in a screening database.
    reagent_set_identifier : None | str
        A pointer to an externally defined set of reagents, usually in a screening
        database/automation database.
    type : None | str
        A human readable identifier for the screen type; e.g. RNAi, cDNA, SiRNA,
        etc. This string is likely to become an enumeration in future releases.
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    description: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Description",
            "type": "Element",
            "white_space": "preserve",
        },
    )
    reagents: list[Reagent] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "Reagent",
            "type": "Element",
        },
    )
    plate_refs: list["Screen.PlateRef"] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "PlateRef",
            "type": "Element",
        },
    )
    annotation_refs: list[AnnotationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "AnnotationRef",
            "type": "Element",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Screen:\S+)|(Screen:\S+)",
        json_schema_extra={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Screen:\S+)|(Screen:\S+)",
        },
    )
    name: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Name",
            "type": "Attribute",
        },
    )
    protocol_identifier: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ProtocolIdentifier",
            "type": "Attribute",
        },
    )
    protocol_description: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ProtocolDescription",
            "type": "Attribute",
        },
    )
    reagent_set_description: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ReagentSetDescription",
            "type": "Attribute",
        },
    )
    reagent_set_identifier: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ReagentSetIdentifier",
            "type": "Attribute",
        },
    )
    type: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Type",
            "type": "Attribute",
        },
    )

    class PlateRef(Reference):
        id: str = Field(
            default="__auto_sequence__",
            pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Plate:\S+)|(Plate:\S+)",
            json_schema_extra={
                "name": "ID",
                "type": "Attribute",
                "required": True,
                "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Plate:\S+)|(Plate:\S+)",
            },
        )


PlateRef = Screen.PlateRef
