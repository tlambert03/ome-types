from datetime import datetime
from typing import Optional

from pydantic import Field

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.experiment_ref import ExperimentRef
from ome_types._autogenerated.ome_2016_06.experimenter_group_ref import (
    ExperimenterGroupRef,
)
from ome_types._autogenerated.ome_2016_06.experimenter_ref import (
    ExperimenterRef,
)
from ome_types._autogenerated.ome_2016_06.imaging_environment import (
    ImagingEnvironment,
)
from ome_types._autogenerated.ome_2016_06.instrument_ref import InstrumentRef
from ome_types._autogenerated.ome_2016_06.microbeam_manipulation_ref import (
    MicrobeamManipulationRef,
)
from ome_types._autogenerated.ome_2016_06.objective_settings import (
    ObjectiveSettings,
)
from ome_types._autogenerated.ome_2016_06.pixels import Pixels
from ome_types._autogenerated.ome_2016_06.roi_ref import ROIRef
from ome_types._autogenerated.ome_2016_06.stage_label import StageLabel
from ome_types._mixins._base_type import OMEType

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class Image(OMEType):
    """This element describes the actual image and its meta-data.

    The elements that are references (ending in Ref or Settings) refer
    to elements defined outside of the Image element. Ref elements are
    simple links, while Settings elements are links with additional
    values. If any of the required Image attributes or elements are
    missing, its guaranteed to be an invalid document. The required
    attributes and elements are ID and Pixels. ExperimenterRef is
    required for all Images with well formed LSIDs. ImageType is a
    vendor-specific designation of the type of image this is. Examples
    of ImageType include 'STK', 'SoftWorx', etc. The Name attributes are
    in all cases the name of the element instance. In this case, the
    name of the image, not necessarily the filename. Physical size of
    pixels are microns[Âµm].

    Attributes
    ----------
    acquisition_date : None | datetime
        The acquisition date of the Image. The element contains an xsd:dateTime
        string based on the ISO 8601 format (i.e. 1988-04-07T18:39:09.359) YYYY-MM-
        DDTHH:mm:SS.sssZ Y - Year M - Month D - Day H - Hour m - minutes S -
        Seconds s - sub-seconds (optional) Z - Zone (optional) +HH:mm or -HH:mm or
        Z for UTC Note: xsd:dataTime supports a very wide date range with unlimited
        precision. The full date range and precision are not typically supported by
        platform- and language-specific libraries. Where the supported time
        precision is less than the precision used by the xsd:dateTime timestamp
        there will be loss of precision; this will typically occur via direct
        truncation or (less commonly) rounding. The year value can be large and/or
        negative. Any value covering the current or last century should be
        correctly processed, but some systems cannot process earlier dates. The
        sub-second value is defined as an unlimited number of digits after the
        decimal point. In Java a minimum of millisecond precision is guaranteed. In
        C++ microsecond precision is guaranteed, with nanosecond precision being
        available on some platforms. Time zones are supported, eg
        '2013-10-24T11:52:33+01:00' for Paris, but in most cases it will be
        converted to UTC when the timestamp is written.
    experimenter_ref : None | ExperimenterRef
        (The Image ExperimenterRef).
    description : None | str
        A description for the image. [plain-text multi-line string]
    experiment_ref : None | ExperimentRef
        (The Image ExperimentRef).
    experimenter_group_ref : None | ExperimenterGroupRef
        (The Image ExperimenterGroupRef).
    instrument_ref : None | InstrumentRef
        (The Image InstrumentRef).
    objective_settings : None | ObjectiveSettings
        (The Image ObjectiveSettings).
    imaging_environment : None | ImagingEnvironment
        (The Image ImagingEnvironment).
    stage_label : None | StageLabel
        (The Image StageLabel).
    pixels : Pixels
        (The Image Pixels).
    roi_refs : list[ROIRef]
        (The Image ROIRefs).
    microbeam_manipulation_refs : list[MicrobeamManipulationRef]
        (The Image MicrobeamManipulationRefs).
    annotation_refs : list[AnnotationRef]
        (The Image AnnotationRefs).
    id : str
        (The Image ID).
    name : None | str
        (The Image Name).
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    acquisition_date: Optional[datetime] = Field(
        default=None,
        json_schema_extra={
            "name": "AcquisitionDate",
            "type": "Element",
        },
    )
    experimenter_ref: Optional[ExperimenterRef] = Field(
        default=None,
        json_schema_extra={
            "name": "ExperimenterRef",
            "type": "Element",
        },
    )
    description: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Description",
            "type": "Element",
            "white_space": "preserve",
        },
    )
    experiment_ref: Optional[ExperimentRef] = Field(
        default=None,
        json_schema_extra={
            "name": "ExperimentRef",
            "type": "Element",
        },
    )
    experimenter_group_ref: Optional[ExperimenterGroupRef] = Field(
        default=None,
        json_schema_extra={
            "name": "ExperimenterGroupRef",
            "type": "Element",
        },
    )
    instrument_ref: Optional[InstrumentRef] = Field(
        default=None,
        json_schema_extra={
            "name": "InstrumentRef",
            "type": "Element",
        },
    )
    objective_settings: Optional[ObjectiveSettings] = Field(
        default=None,
        json_schema_extra={
            "name": "ObjectiveSettings",
            "type": "Element",
        },
    )
    imaging_environment: Optional[ImagingEnvironment] = Field(
        default=None,
        json_schema_extra={
            "name": "ImagingEnvironment",
            "type": "Element",
        },
    )
    stage_label: Optional[StageLabel] = Field(
        default=None,
        json_schema_extra={
            "name": "StageLabel",
            "type": "Element",
        },
    )
    pixels: Pixels = Field(
        json_schema_extra={
            "name": "Pixels",
            "type": "Element",
            "required": True,
        }
    )
    roi_refs: list[ROIRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "ROIRef",
            "type": "Element",
        },
    )
    microbeam_manipulation_refs: list[MicrobeamManipulationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "MicrobeamManipulationRef",
            "type": "Element",
        },
    )
    annotation_refs: list[AnnotationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "AnnotationRef",
            "type": "Element",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Image:\S+)|(Image:\S+)",
        json_schema_extra={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Image:\S+)|(Image:\S+)",
        },
    )
    name: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Name",
            "type": "Attribute",
        },
    )
