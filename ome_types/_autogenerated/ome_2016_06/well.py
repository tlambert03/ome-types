from typing import Optional

from pydantic import Field

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.reagent_ref import ReagentRef
from ome_types._autogenerated.ome_2016_06.well_sample import WellSample
from ome_types._mixins._base_type import OMEType
from ome_types.model._color import Color

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class Well(OMEType):
    """A Well is a component of the Well/Plate/Screen construct to describe
    screening applications.

    A Well has a number of WellSample elements that link to the Images
    collected in this well. The ReagentRef links any Reagents that were
    used in this Well. A well is part of only one Plate. The origin for
    the row and column identifiers is the top left corner of the plate
    starting at zero. i.e The top left well of a plate is index (0,0)

    Attributes
    ----------
    well_samples : list[WellSample]
        (The Well WellSamples).
    reagent_ref : None | ReagentRef
        (The Well ReagentRef).
    annotation_refs : list[AnnotationRef]
        (The Well AnnotationRefs).
    id : str
        (The Well ID).
    column : int
        This is the column index of the well, the origin is the top left corner of
        the plate with the first column of cells being column zero. i.e top left is
        (0,0) The combination of Row, Column has to be unique for each well in a
        plate.
    row : int
        This is the row index of the well, the origin is the top left corner of the
        plate with the first row of wells being row zero. i.e top left is (0,0) The
        combination of Row, Column has to be unique for each well in a plate.
    external_description : None | str
        A description of the externally defined identifier for this plate.
    external_identifier : None | str
        The ExternalIdentifier attribute may contain a reference to an external
        database.
    type : None | str
        A human readable identifier for the screening status. e.g. empty, positive
        control, negative control, control, experimental, etc.
    color : Color
        A marker color used to highlight the well - encoded as RGBA The default
        value "-1" is #FFFFFFFF so solid white (it is a signed 32 bit value) NOTE:
        Prior to the 2012-06 schema the default value was incorrect and produced a
        transparent red not solid white.
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    well_samples: list[WellSample] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "WellSample",
            "type": "Element",
        },
    )
    reagent_ref: Optional[ReagentRef] = Field(
        default=None,
        json_schema_extra={
            "name": "ReagentRef",
            "type": "Element",
        },
    )
    annotation_refs: list[AnnotationRef] = Field(
        default_factory=list,
        json_schema_extra={
            "name": "AnnotationRef",
            "type": "Element",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        pattern=r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Well:\S+)|(Well:\S+)",
        json_schema_extra={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Well:\S+)|(Well:\S+)",
        },
    )
    column: int = Field(
        ge=0,
        json_schema_extra={
            "name": "Column",
            "type": "Attribute",
            "required": True,
            "min_inclusive": 0,
        },
    )
    row: int = Field(
        ge=0,
        json_schema_extra={
            "name": "Row",
            "type": "Attribute",
            "required": True,
            "min_inclusive": 0,
        },
    )
    external_description: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ExternalDescription",
            "type": "Attribute",
        },
    )
    external_identifier: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "ExternalIdentifier",
            "type": "Attribute",
        },
    )
    type: Optional[str] = Field(
        default=None,
        json_schema_extra={
            "name": "Type",
            "type": "Attribute",
        },
    )
    color: Color = Field(
        default_factory=Color,
        json_schema_extra={
            "name": "Color",
            "type": "Attribute",
        },
    )
