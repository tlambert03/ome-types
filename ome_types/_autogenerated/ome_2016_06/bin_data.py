from pydantic import Field, model_validator

from ome_types._autogenerated.ome_2016_06.bin_data_compression import (
    BinData_Compression,
)
from ome_types._mixins._base_type import OMEType
from ome_types._mixins._validators import bin_data_root_validator

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class BinData(OMEType):
    """The contents of this element are base64-encoded.

    These are not CDATA sections, just a base64 stream.

    Attributes
    ----------
    value : bytes
        (The BinData value).
    compression : BinData_Compression
        Specifies the compression scheme used to encode the data.
    big_endian : bool
        This is true if the binary data was written in BigEndian order. This is
        dependent on the system architecture of the machine that wrote the pixels.
        True for essentially all modern CPUs other than Intel and Alpha. All Binary
        data must be written in the same endian order.
    length : int
        Character count attribute for the BinData field. This is the length of the
        base-64 encoded block. It allows easy skipping of the block when parsing
        the file. [unit:bytes]
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    value: bytes = Field(
        json_schema_extra={
            "required": True,
            "format": "base64",
        }
    )
    compression: BinData_Compression = Field(
        default=BinData_Compression.NONE,
        json_schema_extra={
            "name": "Compression",
            "type": "Attribute",
        },
    )
    big_endian: bool = Field(
        json_schema_extra={
            "name": "BigEndian",
            "type": "Attribute",
            "required": True,
        }
    )
    length: int = Field(
        ge=0,
        json_schema_extra={
            "name": "Length",
            "type": "Attribute",
            "required": True,
            "min_inclusive": 0,
        },
    )

    _vbindata = model_validator(mode="before")(bin_data_root_validator)


Compression = BinData_Compression
